{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/Notification/Notification.styled.js","image/cat_hungry.png","components/Notification/Notification.js","components/App/App.jsx","index.js"],"names":["Container","props","theme","colors","white","shadow","animate","transition","shadowHover","Title","size","title","black","Children","Section","children","Inner","Button","button","orange","FeedbackOptions","options","onLeaveFeedback","keys","Object","map","key","onClick","slice","toLocaleUpperCase","review","Wrapper","WrapperTotal","Subtitle","subtitle","EmojiNeutral","EmojiNeutralFill","icon","small","EmojiAngry","EmojiAngryFill","EmojiHeartEyes","EmojiHeartEyesFill","ChatSquareQuote","ChatSquareQuoteFill","HandThumbsUp","HandThumbsUpFill","Statistics","good","bad","neutral","total","positivePercentage","Image","Notification","message","src","image","alt","width","App","state","updateCountFeedback","data","setState","prevState","values","this","reduce","acc","value","countTotalFeedback","Math","floor","toFixed","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","medium","primaryText","secondaryText","document","getElementById"],"mappings":"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","file":"static/js/main.b138ee36.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\n\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  margin-top: 50px;\r\n  width: 500px;\r\n  background-color: ${props => props.theme.colors.white};\r\n  -webkit-box-shadow: ${props => props.theme.colors.shadow};\r\n  -moz-box-shadow: ${props => props.theme.colors.shadow};\r\n  box-shadow: ${props => props.theme.colors.shadow};\r\n  transition: box-shadow ${props => props.theme.animate.transition};\r\n\r\n  &:hover {\r\n    -webkit-box-shadow: ${props => props.theme.colors.shadowHover};\r\n  -moz-box-shadow: ${props => props.theme.colors.shadowHover};\r\n  box-shadow: ${props => props.theme.colors.shadowHover};\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin: 0px;\r\n  padding-bottom: 10px;\r\n  font-size: ${props => props.theme.size.title};\r\n  font-weight: 700;\r\n  line-height: 1.4;\r\n  color: ${props => props.theme.colors.black};\r\n  text-align: left;\r\n\r\n`;\r\n\r\nexport const Children = styled.div`\r\n  padding: 15px;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Container, Title, Children } from './Section.styled'\r\n\r\nexport const Section = ({ title, children }) => {\r\n    return (\r\n        <Container>\r\n            {title && <Title>{title}</Title>}\r\n            <Children>{children}</Children>\r\n       </Container> \r\n    )\r\n}\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};","import styled from '@emotion/styled/macro';\r\n\r\n\r\nexport const Inner = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-flex;\r\n  padding: 13px 35px;\r\n  border: 0;\r\n  border-radius: 10px;\r\n  font-size: ${props => props.theme.size.button};\r\n  font-weight: 500;\r\n  color: ${props => props.theme.colors.white};\r\n  background-color: ${props => props.theme.colors.orange};\r\n  border: 2px solid ${props => props.theme.colors.white};\r\n  transition: background-color ${props => props.theme.animate.transition};\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n\r\n    &:not(:last-child){\r\n        margin-right: 10px;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n    background-color: ${props => props.theme.colors.white};\r\n    color: ${props => props.theme.colors.orange};\r\n    border: 2px solid ${props => props.theme.colors.orange};\r\n}\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Inner, Button } from './FeedbackOptions.styled';\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    const keys = Object.keys(options);\r\n    \r\n    return (\r\n     <Inner>\r\n      {keys.map((key) => (\r\n        <Button\r\n          key={key}\r\n          onClick={() => {\r\n            onLeaveFeedback(key);\r\n          }}\r\n        >\r\n          {key.slice(0, 1).toLocaleUpperCase() + key.slice(1)}\r\n        </Button>\r\n      ))}\r\n    </Inner>   \r\n    );\r\n}\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.exact({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import styled from '@emotion/styled/macro';\r\nimport { EmojiNeutralFill, EmojiAngryFill, EmojiHeartEyesFill, ChatSquareQuoteFill, HandThumbsUpFill } from '@styled-icons/bootstrap';\r\n\r\nexport const Inner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  margin: 0px;\r\n  padding-bottom: 10px;\r\n  font-size: ${props => props.theme.size.review};\r\n  font-weight: 400;\r\n  line-height: 1.4;\r\n  color: ${props => props.theme.colors.black};\r\n  text-align: left;\r\n}\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\npadding-top: 10px;\r\npadding-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n}\r\n`;\r\nexport const WrapperTotal = styled.div`\r\nmargin-top:50px;\r\npadding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\nborder: 1px solid ${props => props.theme.colors.orange};\r\n}\r\n`;\r\n\r\nexport const Subtitle = styled.h4`\r\n  margin: 0px;\r\n  padding-bottom: 10px;\r\n  font-size: ${props => props.theme.size.subtitle};\r\n  font-weight: 500;\r\n  line-height: 1.3;\r\n  color: ${props => props.theme.colors.black};\r\n  text-align: left;\r\n}\r\n`;\r\n\r\nexport const EmojiNeutral = styled(EmojiNeutralFill)`\r\n  margin-right: 9px;\r\n  color: ${props => props.theme.colors.orange};\r\n  width:  ${props => props.theme.icon.small};\r\n`;\r\n\r\nexport const EmojiAngry = styled(EmojiAngryFill)`\r\n  margin-right: 9px;\r\n  color: ${props => props.theme.colors.orange};\r\n  width:  ${props => props.theme.icon.small};\r\n`;\r\n\r\nexport const EmojiHeartEyes = styled(EmojiHeartEyesFill)`\r\n  margin-right: 9px;\r\n  color: ${props => props.theme.colors.orange};\r\n  width:  ${props => props.theme.icon.small};\r\n`;\r\n\r\nexport const ChatSquareQuote = styled(ChatSquareQuoteFill)`\r\n  margin-right: 9px;\r\n  color: ${props => props.theme.colors.orange};\r\n  width:  ${props => props.theme.icon.small};\r\n`;\r\n\r\nexport const HandThumbsUp = styled(HandThumbsUpFill)`\r\n  margin-right: 9px;\r\n  color: ${props => props.theme.colors.orange};\r\n  width:  ${props => props.theme.icon.small};\r\n`;\r\n\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { Inner, Title, Wrapper, Subtitle, EmojiNeutral, EmojiAngry, EmojiHeartEyes, ChatSquareQuote, HandThumbsUp, WrapperTotal } from './Statistics.styled';\r\n\r\nexport const Statistics = ({ good = 0, bad = 0, neutral = 0, total = 0, positivePercentage = 0 }) => {\r\n        \r\n    return (\r\n        <Inner>\r\n            <Wrapper><EmojiHeartEyes /> <Title> Отлично. Вы супер! — {good}</Title></Wrapper>\r\n            <Wrapper><EmojiNeutral /><Title>Нормально, но могло быть лучше — {neutral}</Title></Wrapper>\r\n            <Wrapper><EmojiAngry /> <Title> Ужасно. Дайте книгу жалоб! — {bad}</Title></Wrapper>\r\n           \r\n            <WrapperTotal>\r\n                <Wrapper><ChatSquareQuote /><Subtitle> Общее колличество отзывов — {total} .</Subtitle></Wrapper>\r\n                <Wrapper><HandThumbsUp /><Subtitle>Из них положительных — {positivePercentage}% .</Subtitle></Wrapper>                \r\n            </WrapperTotal>\r\n        </Inner>\r\n    );\r\n}\r\n\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.string,\r\n};","import styled from '@emotion/styled/macro';\r\n\r\n\r\nexport const Container = styled.div`\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  margin: 0px;\r\n  padding-bottom: 30px;\r\n  font-size: ${props => props.theme.size.title};\r\n  font-weight: 700;\r\n  line-height: 1.4;\r\n  color: ${props => props.theme.colors.black};\r\n  text-align: left;\r\n\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  text-align: center;\r\n`;","export default __webpack_public_path__ + \"static/media/cat_hungry.3e431af5.png\";","import PropTypes from \"prop-types\";\r\nimport { Container, Title, Image } from './Notification.styled';\r\nimport image from \"../../image/cat_hungry.png\";\r\n\r\nexport const Notification = ({ message}) => {\r\n    return (\r\n        <Container>\r\n            {message && <Title>{message}</Title>}\r\n            <Image src={image} alt=\"Печальный котик\" width=\"150\">\r\n            </Image>\r\n            \r\n       </Container> \r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n  image: PropTypes.string,\r\n};","import { Component } from 'react';\n\nimport { Section } from 'components/Section/Section';\nimport { FeedbackOptions } from 'components/FeedbackOptions/FeedbackOptions';\nimport { Statistics } from 'components/Statistics/Statistics';\nimport { Notification } from 'components/Notification/Notification';\n\nexport class App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  \n  updateCountFeedback = (data) => {\n  this.setState((prevState) => {\n    return { [data]: prevState[data] + 1 };\n  });\n  };\n  \n  \n  countTotalFeedback() {\n  return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n  const total = this.countTotalFeedback();\n\n  return total ? Math.floor((this.state.good / total) * 100).toFixed(0) : 0;\n  }\n  \n  \n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n      return(\n        <>\n        <Section title=\"Оставьте отзыв о нашей компании\">\n          <FeedbackOptions\n            options={this.state} onLeaveFeedback={this.updateCountFeedback}\n          />\n        </Section>\n\n          \n          \n      <Section title=\"Наши отзывы \">\n          {total === 0 ? (\n            <Notification message=\"Отзывов пока нет...\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n        </>\n        \n  );\n  }\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport './index.css';\nimport {App} from './components/App/App';\n\n\nconst theme = {\n\n  size: {\n    title: '25px',\n    subtitle: '17px',\n    button: '17px',\n    review: '18px',\n  },\n\n  icon: {\n    small: '27px',\n    medium: '40px',\n},\n\n  colors: {\n    white: '#ffffff',\n    black: '#010101',\n    orange: '#f7630c',\n    primaryText: '#212121',\n    secondaryText: '#757575',\n    shadow: '0px 4px 5px 0px rgba(150, 150, 150, 1)',\n    shadowHover:'0px 0px 13px 5px rgba(122, 122, 122, 1)',\n  },\n\n  animate: {\n    transition: '500ms cubic-bezier(0.075, 0.82, 0.165, 1)',\n  }\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}